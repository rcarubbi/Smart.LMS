@using SmartLMS.Domain.Entities.Content
@using SmartLMS.Domain.Resources
@using SmartLMS.Domain.Entities
@model ClassViewModel
@{
    ViewBag.Title = Resource.ClassName + " " + Model.Name;
}

@section styles {
    <style type="text/css">
        .videoWrapper {
            height: 0;
            padding-bottom: 56.25%; /* 16:9 */
            padding-top: 25px;
            position: relative;
        }

            .videoWrapper iframe {
                height: 100%;
                left: 0;
                position: absolute;
                top: 0;
                width: 100%;
            }
    </style>
}
 
<div class="col-md-8">
    <div class="card">
        <div class="content">
            <h2 class="index-title">
                @Model.Name
                @if (Model.Editable)
                {
                    <a href="@Url.Action("Edit", "Class", new {Model.Id})">
                        <i class="fa fa-pencil"></i>
                    </a>
                }
            </h2>
            @{
                var url = string.Empty;
            }
            @switch (Model.ContentType)
            {
                case ContentType.Vimeo:
                    url = "http://player.vimeo.com/video/" + Model.Content;

                    break;
                case ContentType.YouTube:
                    url = "https://www.youtube.com/embed/" + Model.Content + "??modestbranding=1&enablejsapi=1&rel=0&controls=1";
                    break;
                default:
                    throw new ArgumentOutOfRangeException();
            }
            <div class="videoWrapper">
                <iframe id="videoFrame"
                        src="@url"
                        frameborder="0"
                        allowfullscreen>
                </iframe>
            </div>
        </div>
    </div>
    <div class="panel panel-info">
        <div class="panel-heading">
            <h3 class="panel-title">@Resource.FilePlural</h3>
        </div>
        <div class="panel-body panel-body-no-margin">
            <div class="bs-component">
                <div class="list-group">
                    @foreach (var item in Model.Files)
                    {
                        <div class="list-group-item list-group-item-sm">

                            <a href="@Url.Action("Download", "Class", new {item.Id})" class='link-group-item'>
                                <div class="row-action-primary">
                                    <i class="fa fa-file"></i>
                                </div>
                                <div class="row-content">
                                    <h5 class="list-group-item-heading">@item.Name</h5>
                                </div>
                            </a>
                        </div>
                        <div class="list-group-separator list-group-separator-sm"></div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-info">
        <div class="panel-heading">
            <h3 class="panel-title">@Resource.CommentsTitle</h3>
        </div>
        <div class="panel-body panel-body-no-margin">
            @Html.Partial("_CommentForm", new CommentViewModel { ClassId = Model.Id })
            <div class="bs-component" id="comments-container" style="max-height: 655px; overflow-x: auto">

                <div class="list-group" id="comments-list">

                </div>
                <div id="no-results" class="text-primary text-center" style="display: none;">@Resource.NoMoreComments</div>
            </div>
        </div>
    </div>

</div>
<div class="col-md-4">
    <div class="panel panel-info">
        <div class="panel-heading">
            <h3 class="panel-title">@Resource.NextClasses</h3>
        </div>
        <div class="panel-body panel-body-no-margin">
            @Html.Action("ClassListSmall", new { Id = Model.CourseId, CurrentClassId = Model.Id })
            <div class="text-center">
                <a href="@Url.Action("Index", "Class", new {Id = Model.CourseId})" class="btn btn-simple">
                    <i class="material-icons">reply</i> @Resource.BackToIndex
                </a>
            </div>
        </div>
    </div>

</div>


<script id="comment-template" type="text/x-handlebars-template">
    {{#each Comments}}
    <div class="list-group-item list-group-item-sm comment" data-id="{{Id}}">
        <div class="row-picture">
            <i class="material-icons circle">person</i>
            @*<img class="circle" src="{{UserImage}}">*@
        </div>
        <div class="row-content">
            {{#if AllowEdit}}
            <div class="least-content"><button type="button" class="close" aria-hidden="true">×</button></div>
            {{/if}}
            <h4 class="list-group-item-heading">{{Username}}</h4>
            <p class="list-group-item-text">{{CommentText}}</p>
            <div class="footer-content">{{DateTimeDescription}}</div>
        </div>
    </div>
    <div class="list-group-separator list-group-separator-sm"></div>
    {{/each}}
</script>


@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @if (Model.ContentType == ContentType.Vimeo)
    {
        <script src="https://player.vimeo.com/api/player.js"></script>
        <script src="~/Scripts/vimeo.js"></script>
        <script>
            $(function() {

                var vimeoPlayer = SmartLMS.Vimeo(Vimeo);
                vimeoPlayer.initialize('@Model.Id', '@Url.Action("UpdateProgress", "Class")', '@Model.WatchedSeconds');
            })
        </script>
    }
    else
    {
        <script src="https://www.youtube.com/iframe_api"></script>
        <script src="~/Scripts/youtube.js"></script>
        <script>
            $(function() {
                var youtubePlayer = SmartLMS.Youtube(YT);
                YT.ready(onYouTubeIframeAPIReady);

                function onYouTubeIframeAPIReady() {
                    youtubePlayer.initialize('@Model.Id',
                        '@Url.Action("UpdateProgress", "Class")',
                        '@Model.WatchedSeconds', '@Parameter.BASE_URL');
                }
            })
        </script>
    }


    <script>


        SmartLMS.CommentProxy = (function() {
            var $private = {}, $public = {};

            $public.listComments = function(page) {
                return $.ajax({
                    type: "POST",
                    url: SmartLMS.api + "Class/ListComments",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({ classId: '@Model.Id', page })
                });
            };

            $public.sendComment = function(comment) {
                return $.ajax({
                    type: "POST",
                    url: SmartLMS.api + "Class/Comment",
                    dataType: "json",
                    data: comment
                });
            };

            $public.delete = function(commentId) {
                return $.ajax({
                    type: "POST",
                    url: SmartLMS.api + "Class/DeleteComment",
                    dataType: "json",
                    data: { commentId }
                });
            };

            return $public;
        }());

        (function(proxy) {
            var $private = {};

            $(function() {
                $(window).off("resize", $private.resizeSlimControl);
                if (!SmartLMS.isMobile) {
                    SmartLMS.App.initializeSlimControl(true);
                    $("#comments-container").slimScroll({
                        'size': '8px',
                        'height': '450px'
                    });
                } else {
                    $("#comments-container").css({
                        "overflow": "auto",
                        "height": "450px"
                    });
                }


                $private.CommentTemplate = Handlebars.compile($("#comment-template").html());
                $private.CurrentPage = 1;
                proxy.listComments($private.CurrentPage).done($private.showComments);
                $("#comments-container").on("scroll", $private.loadCommentsPage);
                $("#comment-form").on("submit", $private.sendComment);
                $("#comments-container").on("click", ".comment .close", $private.deleteComment);

            });


            $private.sendComment = function(e) {
                e.preventDefault();

                proxy.sendComment($(this).serialize()).always(function() {
                    $("#no-results").hide();

                    $("#CommentText").val("");
                    $private.CurrentPage = 1;
                    proxy.listComments($private.CurrentPage).done($private.showComments);
                });
            };

            $private.deleteComment = function() {
                var commentId = $(this).closest(".comment").data("id");
                proxy.delete(commentId).always(function() {
                    $private.CurrentPage = 1;
                    proxy.listComments($private.CurrentPage).done($private.showComments);
                });
            };

            $private.loadCommentsPage = function(e) {
                if ($("#comments-container").scrollTop() + $("#comments-container").innerHeight() >=
                    $("#comments-container")[0].scrollHeight) {
                    proxy.listComments(++$private.CurrentPage).done($private.refreshComments);
                }
            };


            $private.refreshComments = function(data) {
                if (data.length === 0) {
                    $("#no-results").show();
                } else {
                    $("#comments-list").append($private.CommentTemplate({ Comments: data }));
                }
            };

            $private.showComments = function(data) {
                $("#comments-list").html($private.CommentTemplate({ Comments: data }));
                $("#comments-container").animate({ scrollTop: 0 }, 1000);
            };


        }(SmartLMS.CommentProxy));


    </script>
}